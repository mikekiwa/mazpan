<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="775" height="460">
	
	<mx:WebService id="UsuarioService" wsdl="{index.URL + 'UsuarioService.asmx?WSDL'}" showBusyCursor="true">
		<mx:operation name="editUsuario" result="editUsuarioResult(event)" 	fault="ErrorFaultHandler(event, 'editUsuario')"/>
		<mx:operation name="getMenus" 	 result="getMenusResult(event)" 	fault="ErrorFaultHandler(event, 'getMenus')"/>
	</mx:WebService>
	
	<mx:Metadata>
		[Event(name="complexClick",type="eventos.ComplexEvent")]
   	</mx:Metadata>
   	
   	<mx:Script>
   		<![CDATA[
   			import mx.messaging.channels.StreamingAMFChannel;
   			import mx.controls.Alert;
   			import eventos.ComplexEvent;
   			import mx.rpc.events.ResultEvent;
   			import mx.rpc.events.FaultEvent;
   			
   			public static const nombre:String = "EditarUsuario";
   			
   			[Bindable]
   			private var personal_ac:Array = new Array();
   			
   			[Bindable]
   			private var usuario:Object;
   			
   			[Bindable]
   			private var menus_ac:Array;
   			
   			private function ErrorFaultHandler(event:FaultEvent, metodo:String):void
            {
            	trace("Error en clase "+nombre+".mxml en metodo " + metodo + "\nDetalle: "+event.fault.faultString);
            }
            
            public function parametros(_usuario:Object):void
            {
            	UsuarioService.getMenus();
            	usuario = _usuario;
            	username.text = usuario.userName;
            	password.text = usuario.password;
            	
				editar_btn.enabled = true;
				
				UsuarioService.getMenus();
            }
            private function getMenusResult(event:ResultEvent):void
            {
            	menus_ac = event.result.Tables.Menus.Rows.source as Array;
            	
            	var menusAux:Array = new Array;
				var i:int=0;
				var j:int=0;
				
				for(i=0; i<menus_ac.length; i++)
				{
					var encontrado:Boolean = false;
					for(j=0; j<menusAux.length; j++)
						if(menus_ac[i].menu==menusAux[j])encontrado = true;
					if(!encontrado)
					{
						menusAux.push(menus_ac[i].menu);
					}
				}
				
				var misMenux:Array =  new Array;
				j=0;
				var indexMenu:int = 0;
				for(i=0; i<menusAux.length; i++)
				{
					var menu:Object = new Object;
					menu.menu = menus_ac[j].menu;
					menu.opcion = "";
					misMenux.push(menu);
					
					for(; j<menus_ac.length; j++)
					{
						if(menus_ac[j].menu==menus_ac[indexMenu].menu)
						{
							misMenux.push(menus_ac[j]);
						}
						else
						{
							indexMenu = j+1;
							break;
						}
					}
				}
				
				var p:String = usuario.privilegio;
            	var aux:Array = p.split('');
            	
            	for(i=0; i<aux.length; i++)
            	{
            		if(i>=misMenux.length) break;
            		
            		if(aux[i]=='1') misMenux[i].ok = true;
            	}
            	menus_ac=misMenux;
            	
				tabla.dataProvider = menus_ac;
            }
			private function editar():void
			{
				var u:Object = new Object();
				u.user = username.text;
				u.pass = password.text;
				u.privilegio = privilegio();
				UsuarioService.editUsuario(u, usuario);
			}
			private function editUsuarioResult(event:ResultEvent):void
			{
				var resultado:int = event.result as int;
				if(resultado==1)
				{
					atras();
				} 
				else Alert.show("Imposible editar Usuario, inténtelo más tarde");
			}
			private function atras():void
			{
				dispatchEvent(new ComplexEvent(ComplexEvent.COMPLEX_CLICK, "", nombre, null));
				clean();
			}
			public function clean():void
			{
				personal_ac = new Array();
				if(username!=null) username.text="";
				if(password!=null) password.text="";
				menus_ac = new Array;
			}
			private function verificar():void
			{
				if(username.text.length>0 && password.text.length>4 && tienePrivilegio())
				{
					editar_btn.enabled = true;
				}
				else
				{
					editar_btn.enabled = false;
				}
			}
			private function tienePrivilegio():Boolean
			{
				var count:int=0;
				for(var i:int=0;i<menus_ac.length; i++)
				{
					if(menus_ac[i].ok) count++;
				}
				if(count>0) return true;
				return false;
			}
			private function privilegio():String
			{
				var privilegios:String = "";
				var indexMenu:int = 0;
				
				for(var i:int=0; i<menus_ac.length; i++)
				{
					if(menus_ac[indexMenu].menu!=menus_ac[i].menu)
					{
						privilegios += "-";
						indexMenu = i;
					}
					
					if(menus_ac[i].ok) privilegios += "1";
					else privilegios += "0";
				}
				
				return privilegios;
			}
			public function actualizarXX():void
			{
				var i:int=0;
				if(tabla.selectedItem!=null)
				{
					if(tabla.selectedItem.opcion=="")
					{
						for(i=tabla.selectedIndex; i<menus_ac.length; i++)
						{
							if(menus_ac[i].menu == tabla.selectedItem.menu)
							{
								menus_ac[i].ok = tabla.selectedItem.ok;
							}
							else
							{
								break;
							}
						}
					}
					else
					{
						var count:int = 0;
						var indexMenu:int = 0;
						for(i=0; i<menus_ac.length; i++)
						{
							if(menus_ac[i].menu == tabla.selectedItem.menu)
							{
								if(menus_ac[i].opcion == "") indexMenu = i;
								else if(menus_ac[i].ok) count++;
							}
						}
						if(count>0) menus_ac[indexMenu].ok = true;
						else menus_ac[indexMenu].ok = false;
					}
				}
				verificar();
			}
   		]]>
   	</mx:Script>
   	<mx:Label x="34" y="10" text="Rut"/>
   	<mx:Label x="34" y="116" text="Nombre de Usuario"/>
   	<mx:Label x="34" y="144" text="Contraseña"/>
   	<mx:Label x="34" y="170" text="Privilegio"/>
   	
   	<mx:TextInput x="162" y="114" id="username" maxChars="50" change="verificar()"/>
   	<mx:TextInput x="162" y="142" id="password" maxChars="50" change="verificar()"/>
   	<mx:Button x="589" y="428" label="Guardar" id="editar_btn" enabled="false" click="editar()"/>
   	<mx:Button x="669" y="428" label="Atras" width="72" click="atras()"/>
   	<mx:Label x="34" y="36" text="Nombres"/>
   	<mx:Label x="34" y="62" text="Apellido Paterno"/>
   	<mx:Label x="34" y="88" text="Apellido Materno"/>
   	<mx:Label x="162" y="10" text="{usuario.rut_persona}" width="579"/>
   	<mx:Label x="162" y="36" text="{usuario.nombres}" width="579"/>
   	<mx:Label x="162" y="62" text="{usuario.apellidoPaterno}" width="579"/>
   	<mx:Label x="162" y="88" text="{usuario.apellidoMaterno}" width="579"/>
   	<mx:DataGrid x="162" y="172" dataProvider="{menus_ac}" id="tabla" width="579" height="248" click="actualizarXX()">
   	   	<mx:columns>
   	   		<mx:DataGridColumn id="colsel" headerText=""  width="20" paddingLeft="2" textAlign="center" sortable="false">
				<mx:itemRenderer>
					<mx:Component>
						<mx:CheckBox click="{data.ok=!data.ok;}" selected="{data.ok}"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Menu" dataField="menu" width="200" sortable="false"/>
   	   	   	<mx:DataGridColumn headerText="Sub-Menu" dataField="opcion" sortable="false"/>
   	   	</mx:columns>
   	</mx:DataGrid>
</mx:Canvas>
