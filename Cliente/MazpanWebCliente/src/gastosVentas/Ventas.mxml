<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="775" height="460" title="Ventas"
	xmlns:mc="misClases.*" backgroundColor="#cccccc" creationComplete="init()">
	
	<mx:WebService id="VentasService" wsdl="{index.URL + 'VentasService.asmx?WSDL'}" showBusyCursor="true">
		<mx:operation name="getVentas"		result="getVentasResult(event)" fault="ErrorFaultHandler(event, 'getVentas')"/>
		<mx:operation name="getVentasPesos"	result="getVentasResult(event)" fault="ErrorFaultHandler(event, 'getVentasPesos')"/>
	</mx:WebService>
	
	<mx:Script>
		<![CDATA[
			import misClases.Venta;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			public static const nombre:String = "Ventas";
			
			[Bindable]
			private var ventas_ac:Array;
			
			private var totalEmpanadas:Array = [0,0,0,0];
            private	var totalPanaderias:Array = [0,0,0,0];
			private var respuestas:int = 0;
			
			private function ErrorFaultHandler(event:FaultEvent, metodo:String):void
            {
            	init();
            	trace("Error en clase "+nombre+".mxml en metodo " + metodo + "\nDetalle: "+event.fault.faultString);
            }
            public function init():void
            {
            	ventas_ac = new Array;
            	if(cargar_btn!=null) cargar_btn.enabled = true;
            	if(sucursalesCB_cmp!=null) sucursalesCB_cmp.init();
            	if(clientesCB_cmp!=null) clientesCB_cmp.init();
            	if(MesesCB!=null) mesCB_cmp.selectedIndex = 0;
            	if(ano_ns!=null) ano_ns.value = 2009;
            	if(en_cb!=null) en_cb.selectedIndex = 0;
            }
            private function cambiarClientes():void
            {
            	clientesCB_cmp.cargar(sucursalesCB_cmp.selectedItem.ShortName);
            }
            private function cargar():void
            {
            	if(clientesCB_cmp!=null && clientesCB_cmp.text!="  - - -  ")
            	{
	            	cargar_btn.enabled = false;
	            	ventas_ac = new Array();
	            	totalEmpanadas = [0,0,0,0];
	           		totalPanaderias = [0,0,0,0];
					if(clientesCB_cmp.selectedItem.CardName=="Todos")
					{
						respuestas = clientesCB_cmp.datos.length-1;
						//for(var i:int=1; i<clientesCB_cmp.datos.length; i++)
						//{
						var aux:String  = clientesCB_cmp.DatosAt(respuestas).CardCode+"";
						var aux2:String  = clientesCB_cmp.DatosAt(respuestas).CardName+"";
						if(en_cb.text == "Ingreso Percibidos") VentasService.getVentasPesos(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.DatosAt(respuestas).CardCode,clientesCB_cmp.DatosAt(respuestas).CardName);
						else if(en_cb.text == "Unidades Vendidas")  VentasService.getVentas(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.DatosAt(respuestas).CardCode,clientesCB_cmp.DatosAt(respuestas).CardName);
						//}
					}
					else
					{
						respuestas = 1;
						if(en_cb.text == "Ingreso Percibidos") VentasService.getVentasPesos(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.selectedItem.CardCode,clientesCB_cmp.selectedItem.CardName);
						else if(en_cb.text == "Unidades Vendidas")  VentasService.getVentas(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.selectedItem.CardCode,clientesCB_cmp.selectedItem.CardName);
					}
            	}
            }
            private function removeFormatting(e:String):String
			{
				var array:Array;
				array = e.split(".");
				return array.join("");
			}
            private function getVentasResult(event:ResultEvent):void
            {
            	respuestas--;
            	var i:int;
            	var j:int;
            	var seguir:Boolean = false;
            	var ventasAux:Array = new Array;
            	var mes:int = event.result.mes;
            	var ano:int = event.result.ano;
            	var t1:Array = event.result.t1.Tables.Ventas1.Rows.source as Array;
            	var t2:Array = event.result.t2.Tables.Ventas2.Rows.source as Array;
            	var t3:Array = event.result.t3.Tables.Ventas3.Rows.source as Array;
            	var t4:Array = event.result.t4.Tables.Ventas4.Rows.source as Array;
            	var t5:Array = event.result.t5.Tables.Presupuesto.Rows.source as Array;
            	
            	var subTotalEmpanadas:Array = [0,0,0,0];
            	var subTotalPanaderias:Array = [0,0,0,0];
            	
            	if(t1.length>0 || t3.length>0 || t5.length>0) ventasAux.push(new Venta(event.result.CardName,0,'','','',''));
				
				for(i=0; i<t3.length; i++)//con esto estoy sumando o restando las notas de credito, a las ventas del año pasado para el mismo mes
            		for(j=0; j<t4.length; j++)
            			if(t3[i].itemname == t4[j].itemname)
            				t3[i].quantity += int(t4[j].quantity);//en realida sumo porque se supone que t2 tiene puros negativos
            	
            	for(i=0; i<t1.length; i++)
				{
					t1[i].tipo = 1;
            		t1[i].anterior = 0;
            		t1[i ].presupuesto = 0;
            		if(int(t1[i].quantity)>0) t1[i].desviacion = 100;
            		else t1[i].desviacion = 0;
            		
            		seguir = true;
            		for(j=0; j<t2.length && seguir; j++)
            		{
            			if(t1[i].itemname == t2[j].itemname)
            			{
            				t1[i].quantity += int(t2[j].quantity);
            				seguir = false;//esto es para decir que ya encontre el item busacado y ya no debo seguir buscado
            			}
            		}
					seguir = true;
            		for(var k:int=0; k<t3.length && seguir; k++)
            		{
	            		if(t1[i].itemname == t3[k].itemname)
	            		{
	            			t1[i].anterior += int(t3[k].quantity);
	            			seguir = false;//esto es para decir que ya encontre el item buscado y ya no debo seguir buscado
	            		}
	            	}
	            	if(t1[i].QryGroup1=='Y')
            		{
            			subTotalEmpanadas[0] += int(t1[i].anterior);
            			subTotalEmpanadas[1] += int(t1[i].quantity);
            			subTotalEmpanadas[2] += int(t1[i].presupuesto);
            		}
            		else
            		{
            			subTotalPanaderias[0] += int(t1[i].anterior);
            			subTotalPanaderias[1] += int(t1[i].quantity);
            			subTotalPanaderias[2] += int(t1[i].presupuesto);
            		}
					ventasAux.push(t1[i]);
				}

				
/*


 Aca me falta ver el resto, llege a formar las tablas "2" de hoja '1' 
ver apuntes 
 */
            	for(i=0; i<t3.length; i++)
            	{
            		seguir=true;
            		
            		for(j=0; j<ventasAux.length && seguir; j++)
            		{
            			if(t3[i].itemname == ventasAux[j].itemname) seguir = false;
            		}
            		if(seguir)//quiere decir que el element i-esimo, no se encuentra en el arreglo auxiliar, por tanto hay que agregarlo, y sumar el valor del año anterior
            		{
            			ventasAux.push(new Venta(t3[i].itemname,1,t3[i].quantity.toString(),'0','0','100'));
            			
            			if(t3[i].QryGroup1=='Y')
            				subTotalEmpanadas[0] += int(t3[i].quantity);
	            		else
	            			subTotalPanaderias[0] += int(t3[i].quantity);
            		}
            	}

				for(i=0; i<t5.length; i++)
            	{
            		seguir=true;
            		
            		var pp:int = 0;
        			var dd:int = 100;
        			if(mes==1) pp = int(t5[i].enero);
    				if(mes==2) pp = int(t5[i].febrero);
    				if(mes==3) pp = int(t5[i].marzo);
    				if(mes==4) pp = int(t5[i].abril);
    				if(mes==5) pp = int(t5[i].mayo);
    				if(mes==6) pp = int(t5[i].junio);
    				if(mes==7) pp = int(t5[i].julio);
    				if(mes==8) pp = int(t5[i].agosto);
    				if(mes==9) pp = int(t5[i].septiembre);
    				if(mes==10) pp = int(t5[i].octubre);
    				if(mes==12) pp = int(t5[i].diciembre);
    				if(mes==11) pp = int(t5[i].noviembre);
    				
    				if(pp!=0)
    				{
    					if(t5[i].QryGroup1=='Y') subTotalEmpanadas[2] += pp;
	            		else subTotalPanaderias[2] += pp;
			            		
	            		for(j=0; j<ventasAux.length && seguir; j++)
	            		{
	            			if(t5[i].itemname == ventasAux[j].itemname)
	            			{
	            				dd = (int(ventasAux[j].quantity)*100-pp*100)/pp;
	            				ventasAux[j].desviacion = dd;
	            				ventasAux[j].presupuesto = pp;
	            				seguir = false;//recuerdo que ya encontre en la lista
	            			}
	            		}
	            		
	            		if(seguir)
	            		{
	            			ventasAux.push(new Venta(t5[i].itemname,1,'0','0',pp.toString(),'-100'));
	            		}
	       			}
            	}
            	if(t1.length>0 || t3.length>0 || t5.length>0)
            	{
					if(subTotalEmpanadas[2]!=0) subTotalEmpanadas[3] = int((subTotalEmpanadas[1]*100-subTotalEmpanadas[2]*100)/subTotalEmpanadas[2]);
					if(subTotalPanaderias[2]!=0) subTotalPanaderias[3] = int((subTotalPanaderias[1]*100-subTotalPanaderias[2]*100)/subTotalPanaderias[2]);
					
            		ventasAux.push(new Venta("Sub Total Familia Empanadas",2,subTotalEmpanadas[0],subTotalEmpanadas[1],subTotalEmpanadas[2],subTotalEmpanadas[3]));
            		ventasAux.push(new Venta("Sub Total Familia Panadería",2,subTotalPanaderias[0],subTotalPanaderias[1],subTotalPanaderias[2],subTotalPanaderias[3]));
            		ventasAux.push(new Object());
            		for(var index:int=0; index<3; index++)//Con esto estamos sumando subtotales de cada especialidad por cada socio, del que se ha pedido cargar ventas
            		{
            			totalEmpanadas[index] += subTotalEmpanadas[index];
            			totalPanaderias[index] += subTotalPanaderias[index];
            		}
            	}
            	if(respuestas<=0)
            	{
            		cargar_btn.enabled = true;
            		if(ventas_ac.length>0 || ventasAux.length>0)
            		{
						if(totalEmpanadas[2]!=0) totalEmpanadas[3] = int((totalEmpanadas[1]*100-totalEmpanadas[2]*100)/totalEmpanadas[2]);
						if(totalPanaderias[2]!=0) totalPanaderias[3] = int((totalPanaderias[1]*100-totalPanaderias[2]*100)/totalPanaderias[2]);
					
            			ventasAux.push(new Venta("Total Familia Empanadas",3,totalEmpanadas[0],totalEmpanadas[1],totalEmpanadas[2],totalEmpanadas[3]));
            			ventasAux.push(new Venta("Total Familia Panadería",3,totalPanaderias[0],totalPanaderias[1],totalPanaderias[2],totalPanaderias[3]));
            		}
            	}
            	else
        		{
        			if(en_cb.text == "Ingreso Percibidos") VentasService.getVentasPesos(mes,ano,clientesCB_cmp.DatosAt(respuestas).CardCode,clientesCB_cmp.DatosAt(respuestas).CardName);
        			else if(en_cb.text == "Unidades Vendidas")  VentasService.getVentas(mes,ano,clientesCB_cmp.DatosAt(respuestas).CardCode,clientesCB_cmp.DatosAt(respuestas).CardName);
        		}
        		for(i=0; i<ventasAux.length; i++)
        		{
        			ventas_ac.push(ventasAux[i]);
        		}
            	tabla.dataProvider = ventas_ac;
            }
            private function exportarPDF():void
            {
            	var pdf:LayoutVentas = new LayoutVentas();
            	pdf.generar(ventas_ac,mesCB_cmp.text,ano_ns.value,en_cb.text);
            }
		]]>
	</mx:Script>
	
	<mc:TablaVentas x="0" y="70" width="755" height="315" id="tabla" dataProvider="{ventas_ac}">
		<mc:columns>
			<mx:DataGridColumn headerText="Descripcion Articulo" dataField="itemname" sortable="false" width="316"/>
			<mx:DataGridColumn headerText="Mes Año Anterior" dataField="anterior" textAlign="right" sortable="false" width="116"/>
			<mx:DataGridColumn headerText="Mes" dataField="quantity" textAlign="right" sortable="false" width="116"/>
			<mx:DataGridColumn headerText="Presupuesto Mes" dataField="presupuesto" textAlign="right" sortable="false" width="116"/>
			<mx:DataGridColumn headerText="Desviación %" dataField="desviacion" textAlign="right" sortable="false" width="90"/>
		</mc:columns>
	</mc:TablaVentas>
	<mx:HBox x="0" y="10" width="100%">
		<mx:Label text="Zona:"/>
		<mc:SucursalesCB id="sucursalesCB_cmp" change="cambiarClientes()"/>
		<mx:Label text="Socio:"/>
		<mc:ClientesCB id="clientesCB_cmp"/>
	</mx:HBox>
	<mx:HBox x="0" y="40" width="100%">
		<mx:Label text="Mes: "/>
		<mc:MesesCB id="mesCB_cmp"/>
		<mx:Label text="Año:"/>
		<mx:NumericStepper id="ano_ns" minimum="1996" maximum="9999" value="2009"/>
		<mx:Label text="En:"/>
		<mx:ComboBox id="en_cb">
			<mx:String>Unidades Vendidas</mx:String>
			<mx:String>Ingreso Percibidos</mx:String>
		</mx:ComboBox>
		<mx:Button label="Cargar" click="cargar()" id="cargar_btn"/>
	</mx:HBox>
	<mx:Button x="669" y="393" label="Exportar" click="exportarPDF()"/>
</mx:Panel>
