<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="795" height="500" xmlns:mc="misClases.*" title="Mermas">

	<mx:WebService id="LocalesService" 	wsdl="{index.URL + 'LocalesService.asmx?WSDL'}" showBusyCursor="true">
		<mx:operation name="getLocales" 			result="getLocalesResult(event)" 			fault="ErrorFaultHandler(event, 'getLocales')"/>
		<mx:operation name="getMermas" 				result="getMermasResult(event)" 			fault="ErrorFaultHandler(event, 'getMermas')"/>
		<mx:operation name="getProducidoVsMermas" 	result="getProducidoVsMermasResult(event)" 	fault="ErrorFaultHandler(event, 'getProducidoVsMermas')"/>
	</mx:WebService>
            		
	<mx:Script>
		<![CDATA[
			import mx.formatters.NumberFormatter;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			public static const nombre:String = "Mermas";
			
			[Bindable]
			private var locales_ac:Array;
			[Bindable]
			private var mermas_ac:Array;
			[Bindable]
			private var cantidadTotalProducida:String = "0";
            [Bindable]
			private var cantidadTotalMermada:String = "0";
			[Bindable]
			private var montoTotalMermado:String = "0";
            
            private var formato:NumberFormatter = new NumberFormatter();
				
			private function ErrorFaultHandler(event:FaultEvent, metodo:String):void
            {
            	trace("Error en clase "+nombre+".mxml en metodo " + metodo + "\nDetalle: "+event.fault.faultString);
            }
			public function init():void
			{
				formato.precision=3;
				formato.useThousandsSeparator=true;
				formato.thousandsSeparatorFrom=".";
				formato.thousandsSeparatorTo=".";
				formato.decimalSeparatorFrom=",";
				formato.decimalSeparatorTo=",";
				
				locales_ac = new Array;
            	mermas_ac = new Array;
				LocalesService.getLocales();
            }
			private function getLocalesResult(event:ResultEvent):void
            {
            	locales_ac = event.result.Tables.Locales.Rows.source as Array;
            	cargar();
            }
            private function cargar():void
            {
            	if(locales_ac.length>0 && desde_df.text.length>0 && hasta_df.text.length>0)
            	{
            		LocalesService.getProducidoVsMermas(local_cb.selectedItem.WhsCode, desde_df.text, hasta_df.text);
            	//	LocalesService.getMermas(local_cb.selectedItem.WhsCode, desde_df.text, hasta_df.text);
            	}
            }
            private function juntar(mermas:Array, producido:Array):Array
            {
            	var aux:Array = new Array;
            	var encontrado:Boolean = false;
            	for(var i:int=0; i<mermas.length; i++)
            	{
            		var m:Object = new Object;
	            	encontrado = false;
            		for(var j:int=0; j<producido.length; j++)
            		{
	            		if(mermas[i].ItemCode==producido[j].ItemCode)
	            		{
	            			m.ItemCode = mermas[i].ItemCode;
	            			m.Dscription = mermas[i].ItemName;
	            			m.MERMADO = mermas[i].MERMADO;
	            			m.MONTOSTOCK = mermas[i].MONTOSTOCK;
	            			
	            			m.PRODUCIDO = producido[j].PRODUCIDO;
	            			
	            			encontrado =true;
	            		}
	            		//else //descartar
	            	}
	            	if(!encontrado)
	            	{
	            		m.ItemCode = mermas[i].ItemCode;
            			m.Dscription = mermas[i].ItemName;
            			m.MERMADO = mermas[i].MERMADO;
            			m.MONTOSTOCK = mermas[i].MONTOSTOCK;
            			
            			m.PRODUCIDO =  0000;//mermas[i].MERMADO;
	            	}
	            	
            		aux.push(m);
            	}
            	return aux;
            } 
            private function getProducidoVsMermasResult(event:ResultEvent):void
            {
            	var aux1:Array = event.result.Mermas.Tables.Mermas.Rows.source as Array;
            	var aux2:Array = event.result.Producido.Tables.Producido.Rows.source as Array;
            	var aux:Array = juntar(aux1,aux2);
            	
            	var producidoTotal:Number = 0;
            	var mermadoTotal:Number = 0;
            	var montoStockTotal:Number = 0;
            	
            	formato.precision = 2;
            	
            	for(var i:int; i<aux.length; i++)
            	{
            		producidoTotal += Number(aux[i].PRODUCIDO);
            		mermadoTotal += Number(aux[i].MERMADO);
            		montoStockTotal += Number(aux[i].MONTOSTOCK);
            		if(aux[i].PRODUCIDO!=0)
            		{
            			var ef:Number = Number(aux[i].MERMADO);
            			ef = ef*100;
            			aux[i].Desviacion = formato.format(ef/Number(aux[i].PRODUCIDO));
            		}
            		else aux[i].Desviacion = 100;
            		aux[i].PRODUCIDO = formato.format(Number(aux[i].PRODUCIDO));
            		aux[i].MERMADO 	 = formato.format(Number(aux[i].MERMADO));
            		aux[i].MONTOSTOCK= formato.format(Number(aux[i].MONTOSTOCK));
            	}
            	cantidadTotalProducida  = formato.format(Number(producidoTotal));
            	cantidadTotalMermada = formato.format(Number(mermadoTotal));
            	montoTotalMermado = formato.format(Number(montoStockTotal));
            	mermas_ac = aux;
            	
            	formato.precision = 3;
            }
            private function getMermasResult(event:ResultEvent):void
            {
            	var aux:Array = event.result.Tables.Mermas.Rows.source as Array;
            	
            	var ct:Number = 0;
            	var mt:Number = 0;
            	
            	for(var i:int; i<aux.length; i++)
            	{
            		ct += Number(aux[i].Quantity);
            		mt += Number(aux[i].Monto);
            		aux[i].Quantity = formato.format(Number(aux[i].Quantity));
            		aux[i].Monto 	= formato.format(Number(aux[i].Monto));
            	}
            	cantidadTotalProducida  = formato.format(Number(ct));
            	cantidadTotalMermada = formato.format(Number(mt));
            	
            	mermas_ac = aux;
            }
		]]>
	</mx:Script>

	<mx:Label text="Local" y="12" x="10" id="label1"/>
	<mx:ComboBox id="local_cb" dataProvider="{locales_ac}" labelField="WhsName" x="51" y="10" change="cargar()"/>
	<mx:HBox x="448" y="10" width="327" id="hbox1">
		<mx:Label text="Desde:" fontWeight="bold"/>
		<mc:myDateField id="desde_df" change="cargar()"/>
		<mx:Label text="Hastas:" fontWeight="bold"/>
		<mc:myDateField id="hasta_df" change="cargar()"/>
	</mx:HBox>
	<mx:DataGrid x="0" y="38" width="775" height="387" dataProvider="{mermas_ac}">
		<mx:columns>
			<mx:DataGridColumn headerText="Descripción" dataField="Dscription" width="365" sortable="false"/>
			<mx:DataGridColumn headerText="Producido" 	dataField="PRODUCIDO" width="110" textAlign="right" sortable="false"/>
			<mx:DataGridColumn headerText="Mermado" 	dataField="MERMADO" 	width="110" textAlign="right" sortable="false"/>
			<mx:DataGridColumn headerText="Desviación" 	dataField="Desviacion" width="80" textAlign="right" sortable="false"/>
			<mx:DataGridColumn headerText="Monto $" 	dataField="MONTOSTOCK" width="110" textAlign="right" sortable="false"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Label x="369" y="432" text="{cantidadTotalProducida}" width="98" textAlign="right" fontWeight="bold"/>
	<mx:Label x="484" y="432" text="{cantidadTotalMermada}" width="95" textAlign="right" fontWeight="bold"/>
	<mx:Label x="673" y="432" text="{montoTotalMermado}" width="95" textAlign="right" fontWeight="bold"/>
</mx:Panel>
