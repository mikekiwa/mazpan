<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="775" height="428" xmlns:mc="misClases.*">
	
	<mx:WebService id="LocalesService" 	wsdl="{index.URL + 'LocalesService.asmx?WSDL'}" showBusyCursor="true">
		<mx:operation name="getLocales" 		result="getLocalesResult(event)" 		fault="ErrorFaultHandler(event, 'getLocales')"/>
		<mx:operation name="getStock" 			result="getStockResult(event)"	 		fault="ErrorFaultHandler(event, 'getStock')"/>
		<mx:operation name="addStockSistema" 	result="addStockSistemaResult(event)"  	fault="ErrorFaultHandler(event, 'addStockSistema')"/>
	</mx:WebService>
	
	
	<mx:Script>
		<![CDATA[
			import flash.system.fscommand;
			import com.as3xls.xls.ExcelFile;
			import mx.controls.Alert;		
			import mx.formatters.NumberFormatter;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			public static const nombre:String = "StockSistema";
			
			[Bindable]
			private var locales_ac:Array;
			[Bindable]
			private var stock_ac:Array;
			
			private var fileRef:FileReference = new FileReference();
									
			private var formato:NumberFormatter = new NumberFormatter();
				
			private function ErrorFaultHandler(event:FaultEvent, metodo:String):void
            {
            	trace("Error en clase "+nombre+".mxml en metodo " + metodo + "\nDetalle: "+event.fault.faultString);
            }
			public function init():void
			{
				fileRef.addEventListener(Event.SELECT, selectHandler);
				
				formato.precision=3;
				formato.useThousandsSeparator=true;
				formato.thousandsSeparatorFrom=".";
				formato.thousandsSeparatorTo=".";
				formato.decimalSeparatorFrom=",";
				formato.decimalSeparatorTo=",";
            	locales_ac = new Array;
            	
				stock_ac = new Array;
				LocalesService.getLocales();
            }
            
			private function buscarArchivo():void
            {
            	if(locales_ac.length>0 && fecha_df.text.length>0)
            	{
            		try
					{
						Alert.show(MENSAJES.MS0004,MENSAJES.AVISO);
						//[new FileFilter("PPack", "*.jpg;*.jpeg;*.gif;*.png;*.tiff;*.tif;*.pdf")] <--- filtro 
					    var success:Boolean = fileRef.browse([new FileFilter("Archivo de texto plano indexado", "*.txt;")]);
					}
					catch (error:Error)
					{
					    trace("Unable to browse for files.");
					}
            	}
            	else
            	{
            		Alert.show(MENSAJES.MS0003,MENSAJES.AVISO);
            	}
            }
            private function selectHandler(event:Event):void
			{
			    try
			    {
			        var url:URLRequest = new URLRequest("C:/"+fileRef.name);
					var loadit:URLLoader = new URLLoader();
					loadit.addEventListener(Event.COMPLETE, completeHandler);
					loadit.load(url);
			    }
			    catch (error:Error)
			    {
			        trace("Unable to upload file.");
			    }
			}
			private function completeHandler(ev:Event):void
			{
				var texto:String = ev.target.data;
				var lineas:Array = texto.split('\r\n');
				var stockAux:Array = new Array;
				var linea:Array;
				
				for(var i:int=1; i<lineas.length; i++)
				{
					var s:Object = new Object;
					linea = String(lineas[i]).split('\t');
					if(linea.length==4)
					{
						s.codigo = rellenar(linea[0],9);
						s.nombre = linea[1];
						s.cantidad = linea[2];
						s.valor = linea[3];
						stockAux.push(s);
					}
				}
						
				LocalesService.addStockSistema(stockAux,local_cb.selectedItem.WhsCode, fecha_df.text);
			}
			private function rellenar(texto:String, largo:int):String
			{
				for(var i:int=texto.length; i<largo; i++)
				{
					texto = "0"+texto;
				}
				return texto;
			}
			private function addStockSistemaResult(event:ResultEvent):void
			{
				cargar();
			}
			private function getLocalesResult(event:ResultEvent):void
            {
            	locales_ac = event.result.Tables.Locales.Rows.source as Array;
            	cargar();
            }
            private function cargar():void
            {
            	if(locales_ac.length>0 && fecha_df.text.length>0) LocalesService.getStock(local_cb.selectedItem.WhsCode, fecha_df.text);
            }
            private function getStockResult(event:ResultEvent):void
            {
            	var stockLocal:Array = event.result.StockLocal.Tables.StockLocal.Rows.source as Array;
            	var stockSistema:Array = event.result.StockSistema.Tables.StockSistema.Rows.source as Array;
            	stock_ac = new Array;
            	
            	for(var i:int=0; i<stockLocal.length; i++)
            	{
            		var producto:Object = new Object;
            		producto.ItemName 	= stockLocal[i].ItemName;
            		producto.Local 		= stockLocal[i].OnHand;
            		producto.Sistema 	= stockSistema[i].OnHand;
            		producto.InvntryUom = stockLocal[i].InvntryUom;
            		producto.Diferencia = Number(stockLocal[i].OnHand as String) - Number(stockSistema[i].OnHand as String);
            		stock_ac.push(producto);
            	}
            }
			
           
		]]>
	</mx:Script>
	<mx:Label text="Local" y="12" x="10"/>
	<mx:ComboBox id="local_cb" dataProvider="{locales_ac}" labelField="WhsName" x="51" y="10" change="cargar()"/>
	<mx:HBox x="479" y="10" width="273">
		<mx:Label text="Fecha:" fontWeight="bold"/>
		<mc:myDateField id="fecha_df" change="cargar()"/>
	</mx:HBox>
	
	<mx:DataGrid x="10" y="68" width="755" height="350" dataProvider="{stock_ac}" id="tabla">
		<mx:columns>
			<mx:DataGridColumn headerText="Item" dataField="ItemName" width="300"/>
			<mx:DataGridColumn headerText="En Stock Local" dataField="Local" width="145" textAlign="right"/>
			<mx:DataGridColumn headerText="En Stock Sistema" dataField="Sistema" width="145" textAlign="right"/>
			<mx:DataGridColumn headerText="Un. Medida" dataField="InvntryUom" width="75" textAlign="right" sortable="false"/>
			<mx:DataGridColumn headerText="Diferencia" dataField="Diferencia" width="100" textAlign="right"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:LinkButton x="10" y="38" label="Cargar Archivo" color="#0000FF" click="buscarArchivo()"/>
	
</mx:Canvas>
