<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="795" height="500" title="Datos Informe"
	xmlns:mc="misClases.*">
	
	<mx:WebService id="LocalesService" 	wsdl="{index.URL + 'LocalesService.asmx?WSDL'}" showBusyCursor="true">
		<mx:operation name="getLocales" 			result="getLocalesResult(event)"			fault="ErrorFaultHandler(event, 'getLocales')"/>
		<mx:operation name="getAsistencia" 			result="getAsistenciaResult(event)"			fault="ErrorFaultHandler(event, 'getAsistencia')"/>
		<mx:operation name="getDesviaciones" 		result="getDesviacionesResult(event)"		fault="ErrorFaultHandler(event, 'getDesviaciones')"/>
		<mx:operation name="getStock" 				result="getStockResult(event)"	 			fault="ErrorFaultHandler(event, 'getStock')"/>
		<mx:operation name="getGastos"				result="getGastosResult(event)" 			fault="ErrorFaultHandler(event, 'getGastos')"/>
		<mx:operation name="getProducidoVsMermas" 	result="getProducidoVsMermasResult(event)" 	fault="ErrorFaultHandler(event, 'getProducidoVsMermas')"/>
	</mx:WebService>
	
	<mx:Script>
		<![CDATA[
			import estadoResultado.EstadoResultado;
			import mx.formatters.NumberFormatter;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			public static const nombre:String = "Informe";
			
			[Bindable]
			private var locales_ac:Array;
			[Bindable]
			private var asistencia_ac:Array;
			[Bindable]
			private var desviaciones_ac:Array;
			[Bindable]
			private var stock_ac:Array;
			[Bindable]
			private var gastosLocal:Array = new Array;
			[Bindable]
			private var mermas_ac:Array;
			[Bindable]
			private var cantidadTotalProducida:String = "0";
            [Bindable]
			private var cantidadTotalMermada:String = "0";
			[Bindable]
			private var montoTotalMermado:String = "0";
			private var porcentaje:Number = 0.1;
        
			
			private var formato:NumberFormatter = new NumberFormatter();
			
			private function ErrorFaultHandler(event:FaultEvent, metodo:String):void
            {
            	trace("Error en clase "+nombre+".mxml en metodo " + metodo + "\nDetalle: "+event.fault.faultString);
            }
            public function init():void
			{
				exportar_btn.enabled = false;
				formato.precision=2;
				formato.useThousandsSeparator=true;
				formato.thousandsSeparatorFrom=".";
				formato.thousandsSeparatorTo=".";
				formato.decimalSeparatorFrom=",";
				formato.decimalSeparatorTo=",";
				
				locales_ac = new Array;
				LocalesService.getLocales();
            }
            private function getLocalesResult(event:ResultEvent):void
            {
            	locales_ac = event.result.Tables.Locales.Rows.source as Array;
            	cargar();
            }
            private function cargar():void
			{
				exportar_btn.enabled = false;
				if(local_cb.selectedIndex!=-1 && desde_df.text.length>0 && hasta_df.text.length>0)
				{
					LocalesService.getAsistencia(local_cb.selectedItem.WhsCode,desde_df.text,hasta_df.text);
				}
			}
            private function getAsistenciaResult(event:ResultEvent):void
            {
            	asistencia_ac = event.result.Tables.Asistencia.Rows.source as Array;
            	LocalesService.getDesviaciones(local_cb.selectedItem.WhsCode,desde_df.text,hasta_df.text);
            }
            private function getDesviacionesResult(event:ResultEvent):void
            {
            	var desviacionesAux:Array = event.result.Tables.Desviaciones.Rows.source as Array;
            	for(var i:int=0; i<desviacionesAux.length; i++)
            	{
            		desviacionesAux[i].Diferencia = Number(desviacionesAux[i].HORNEADO)-Number(desviacionesAux[i].CONSUMIDO);
            		desviacionesAux[i].Desviacion = formato.format((Number(desviacionesAux[i].Diferencia)*100)/Number(desviacionesAux[i].CONSUMIDO));
            		desviacionesAux[i].Diferencia =formato.format(desviacionesAux[i].Diferencia);
            		desviacionesAux[i].CONSUMIDO = formato.format(desviacionesAux[i].CONSUMIDO);
            		desviacionesAux[i].HORNEADO = formato.format(desviacionesAux[i].HORNEADO);
            	}
            	desviaciones_ac = desviacionesAux;
            	
            	LocalesService.getGastos(local_cb.selectedItem.WhsCode, desde_df.text, hasta_df.text);//more params
            }
            private function getGastosResult(event:ResultEvent):void
            {
            	var aux:Array = event.result.Tables.Gastos.Rows.source as Array;
            	var tiposGastos:Array = new VARIABLES().getTiposGastos();
            	
            	for(var i:int=0; i<aux.length; i++)
            		for(var j:int=0; j<tiposGastos.length; j++)
            			if(aux[i].gasto==tiposGastos[j].tipo) aux[i].unidad = tiposGastos[j].unidad;
            			
            	gastosLocal = aux;
            	
            	LocalesService.getStock(local_cb.selectedItem.WhsCode,hasta_df.text);//more params
            }
            private function getStockResult(event:ResultEvent):void
            {
            	var stockLocal:Array = event.result.StockLocal.Tables.StockLocal.Rows.source as Array;
            	var stockSistema:Array = event.result.StockSistema.Tables.StockSistema.Rows.source as Array;
            	stock_ac = new Array;
            	
            	for(var i:int=0; i<stockLocal.length; i++)
            	{
            		var producto:Object = new Object;
            		producto.mostrar 	= true;
            		producto.ItemName 	= stockLocal[i].ItemName;
            		producto.Local 		= formato.format(Number(stockLocal[i].OnHand));
            		producto.Sistema 	= formato.format(Number(stockSistema[i].OnHand));
            		producto.InvntryUom = stockLocal[i].InvntryUom;
            		producto.Diferencia = formato.format(Number(stockLocal[i].OnHand as String) - Number(stockSistema[i].OnHand as String));
            		stock_ac.push(producto);
            	}
            	LocalesService.getProducidoVsMermas(local_cb.selectedItem.WhsCode, desde_df.text, hasta_df.text);
            }
            private function juntar(mermas:Array, producido:Array):Array
            {
            	var aux:Array = new Array;
            	var encontrado:Boolean = false;
            	for(var i:int=0; i<mermas.length; i++)
            	{
            		var m:Object = new Object;
	            	encontrado = false;
            		for(var j:int=0; j<producido.length; j++)
            		{
	            		if(mermas[i].ItemCode==producido[j].ItemCode)
	            		{
	            			m.ItemCode = mermas[i].ItemCode;
	            			m.Dscription = mermas[i].ItemName;
	            			m.MERMADO = mermas[i].MERMADO;
	            			m.MONTOSTOCK = mermas[i].MONTOSTOCK;
	            			
	            			m.PRODUCIDO = producido[j].PRODUCIDO;
	            			
	            			encontrado =true;
	            		}
	            		//else //descartar
	            	}
	            	if(!encontrado)
	            	{
	            		m.ItemCode = mermas[i].ItemCode;
            			m.Dscription = mermas[i].ItemName;
            			m.MERMADO = mermas[i].MERMADO;
            			m.MONTOSTOCK = mermas[i].MONTOSTOCK;
            			
            			m.PRODUCIDO =  0000;//mermas[i].MERMADO;
	            	}
	            	
            		aux.push(m);
            	}
            	return aux;
            } 
            private function getProducidoVsMermasResult(event:ResultEvent):void
            {
            	var aux1:Array = event.result.Mermas.Tables.Mermas.Rows.source as Array;
            	var aux2:Array = event.result.Producido.Tables.Producido.Rows.source as Array;
            	var aux:Array = juntar(aux1,aux2);
            	
            	var producidoTotal:Number = 0;
            	var mermadoTotal:Number = 0;
            	var montoStockTotal:Number = 0;
            	
            	formato.precision = 2;
            	
            	for(var i:int; i<aux.length; i++)
            	{
            		producidoTotal += Number(aux[i].PRODUCIDO);
            		mermadoTotal += Number(aux[i].MERMADO);
            		montoStockTotal += Number(aux[i].MONTOSTOCK);
            		if(aux[i].PRODUCIDO!=0)
            		{
            			var ef:Number = Number(aux[i].MERMADO);
            			ef = ef*100;
            			aux[i].Desviacion = formato.format(ef/Number(aux[i].PRODUCIDO));
            		}
            		else aux[i].Desviacion = 100;
            		aux[i].PRODUCIDO = formato.format(Number(aux[i].PRODUCIDO));
            		aux[i].MERMADO 	 = formato.format(Number(aux[i].MERMADO));
            		aux[i].MONTOSTOCK= formato.format(Number(aux[i].MONTOSTOCK));
            	}
            	cantidadTotalProducida  = formato.format(Number(producidoTotal));
            	cantidadTotalMermada = formato.format(Number(mermadoTotal));
            	montoTotalMermado = formato.format(Number(montoStockTotal));
            	mermas_ac = aux;
            	
            	formato.precision = 3;
            	
            	exportar_btn.enabled  = true;
            }
            private function exportar():void
            {            	
            	var layoutLocales:LayoutLocales = new LayoutLocales;
            	layoutLocales.generar(asistencia_ac,desviaciones_ac,stock_ac, gastosLocal, desde_df.text + " al " + hasta_df.text,local_cb.selectedItem,mermas_ac,cantidadTotalProducida, cantidadTotalMermada, montoTotalMermado);
            }
            private function todos():void
            {
            	for(var i:int=0; i<stock_ac.length; i++)
            	{
            		stock_ac[i].mostrar = true;
            	}
            }
            private function ninguno():void
            {
            	for(var i:int=0; i<stock_ac.length; i++)
            	{
            		stock_ac[i].mostrar = false;
            	}
            }
            private function invertir():void
            {
            	for(var i:int=0; i<stock_ac.length; i++)
            	{
            		stock_ac[i].mostrar = !(stock_ac[i].mostrar);
            	}
            }
		]]>
	</mx:Script>
	<mx:HBox x="448" y="10" width="327" id="hbox1">
		<mx:Label text="Desde:" fontWeight="bold"/>
		<mc:myDateField id="desde_df" change="cargar()"/>
		<mx:Label text="Hastas:" fontWeight="bold"/>
		<mc:myDateField id="hasta_df" change="cargar()"/>
	</mx:HBox>
	<mx:Label x="10" y="8" text="Local"/>
	<mx:ComboBox id="local_cb" dataProvider="{locales_ac}" labelField="WhsName" x="51" y="6" change="cargar()"/>
	<mx:TabNavigator x="0" y="36" width="775" height="384">
		<mx:Canvas label="Asistencia" width="100%" height="100%">
			<mx:DataGrid x="0" y="0" width="100%" height="100%" dataProvider="{asistencia_ac}" id="tabla1">
				<mx:columns>
					<mx:DataGridColumn headerText="Nombres" dataField="CardName" width="495" sortable="false"/>
					<mx:DataGridColumn headerText="Asistencia" dataField="asistencia" width="150" sortable="false"/>
					<mx:DataGridColumn headerText="Horas Atraso" dataField="atraso" width="100" sortable="false"/>
					<mx:DataGridColumn headerText="Fecha" dataField="fecha" width="100" sortable="false"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:Canvas>
		<mx:Canvas label="Desviaciones" width="100%" height="100%">
			<mx:DataGrid x="0" y="0" width="100%" height="100%" dataProvider="{desviaciones_ac}" id="tabla2">
				<mx:columns>
					<mx:DataGridColumn headerText="Item" dataField="ItemName" sortable="false"/>
					<mx:DataGridColumn headerText="Congelado" dataField="CONSUMIDO" width="111" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Horneado" dataField="HORNEADO" width="111" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Diferencia" dataField="Diferencia" width="90" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Desviación %" dataField="Desviacion" width="90" textAlign="right" sortable="false"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:Canvas>
		<mx:Canvas label="Gastos" width="100%" height="100%">
			<mx:DataGrid x="0" y="0" width="773" height="351" dataProvider="{gastosLocal}">
				<mx:columns>
					<mx:DataGridColumn headerText="Gasto" dataField="gasto" width="120"  sortable="false"/>
					<mx:DataGridColumn headerText="Total" dataField="total" width="120" sortable="false"/>
					<mx:DataGridColumn headerText="Unidad" dataField="unidad" width="100" sortable="false"/>
					<mx:DataGridColumn headerText="Observaciones" dataField="observaciones" sortable="false"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:Canvas>
		<mx:Canvas label="Stock" width="100%" height="100%">
			<mx:DataGrid x="0" y="30" width="100%" height="320" dataProvider="{stock_ac}" id="tabla3">
				<mx:columns>
					<mx:DataGridColumn id="colsel" headerText=""  width="25" paddingRight="2" textAlign="center" sortable="false">
						<mx:itemRenderer>
							<mx:Component>
								<mx:CheckBox click="{data.mostrar=!data.mostrar}" selected="{data.mostrar}"/>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="Item" dataField="ItemName" width="300" sortable="false"/>
					<mx:DataGridColumn headerText="En Stock Local" dataField="Local" width="165" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="En Stock Sistema" dataField="Sistema" width="165" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Un. Medida" dataField="InvntryUom" width="111" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Diferencia" dataField="Diferencia" width="165" textAlign="right" sortable="false"/>
				</mx:columns>
			</mx:DataGrid>
			<mx:LinkButton x="0" y="0" label="Todos" color="#0531F0" click="todos()"/>
			<mx:LinkButton x="61" y="0" label="Ninguno" color="#0531F0" click="ninguno()"/>
			<mx:LinkButton x="135" y="0" label="Invertir" color="#0531F0" click="invertir()"/>
		</mx:Canvas>
		<mx:Canvas label="Mermas" width="100%" height="100%">
			<mx:DataGrid x="0" y="0" width="773" height="325" dataProvider="{mermas_ac}">
				<mx:columns>
					<mx:DataGridColumn headerText="Descripción" dataField="Dscription" 	width="365" sortable="false"/>
					<mx:DataGridColumn headerText="Producido" 	dataField="PRODUCIDO" 	width="110" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Mermado" 	dataField="MERMADO"  	width="110" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Desviación" 	dataField="Desviacion" 	width="80" textAlign="right" sortable="false"/>
					<mx:DataGridColumn headerText="Monto $" 	dataField="MONTOSTOCK" 	width="110" textAlign="right" sortable="false"/>
				</mx:columns>
			</mx:DataGrid>
			<mx:Label x="367" y="333" text="{cantidadTotalProducida}" width="98" textAlign="right" fontWeight="bold"/>
			<mx:Label x="672" y="333" text="{montoTotalMermado}" width="95" textAlign="right" fontWeight="bold"/>
			<mx:Label x="480" y="333" text="{cantidadTotalMermada}" width="95" textAlign="right" fontWeight="bold"/>
		</mx:Canvas>
	</mx:TabNavigator>
	<mx:Button x="689" y="428" label="Exportar" click="exportar()" id="exportar_btn" enabled="false"/>
</mx:Panel>
