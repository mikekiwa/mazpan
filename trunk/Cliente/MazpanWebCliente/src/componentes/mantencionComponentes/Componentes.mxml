<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="795" height="500" title="Componentes" 
	creationComplete="init()" xmlns:ns1="componentes.mantencionComponentes.*" xmlns:ns2="componentes.*">
	
	<mx:states>
		<mx:State name="AgregarState">
			<mx:RemoveChild target="{componentes_dg}"/>
			<mx:RemoveChild target="{del}"/>
			<mx:RemoveChild target="{mostrar}"/>
			<mx:RemoveChild target="{input}"/>
			<mx:RemoveChild target="{filtro}"/>
			<mx:RemoveChild target="{add}"/>
			<mx:RemoveChild target="{canvas1}"/>
			<mx:AddChild position="lastChild">
				<ns1:AgregarComponente  id="addComponente" x="0" y="0" complexClick="statesResult(event)"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="AgregarMantencionesState">
			<mx:RemoveChild target="{componentes_dg}"/>
			<mx:RemoveChild target="{del}"/>
			<mx:RemoveChild target="{mostrar}"/>
			<mx:RemoveChild target="{input}"/>
			<mx:RemoveChild target="{filtro}"/>
			<mx:RemoveChild target="{add}"/>
			<mx:RemoveChild target="{canvas1}"/>
			<mx:AddChild position="lastChild">
				<ns2:Mantenciones  id="addMantenciones_cmp" x="0" y="0" complexClick="statesResult(event)"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	
	<mx:WebService id="ElementoService" 		wsdl="{index.URL + 'ElementoService.asmx?WSDL'}" 	showBusyCursor="true">
		<mx:operation name="allElementos" 		result="allElementosResult(event)" 		fault="ErrorFaultHandler(event, 'allElementos')"/>
		<mx:operation name="delElemento" 		result="delElementoResult(event)" 		fault="ErrorFaultHandler(event, 'delElemento')"/>
		<mx:operation name="getElemento"		result="getElementoResult(event)"		fault="ErrorFaultHandler(event, 'getElemento')"/>
	</mx:WebService>
	
	<mx:Script>
		<![CDATA[
			import estadoResultado.FORMATO;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import eventos.ComplexEvent;
			import mx.collections.ArrayCollection;
		
			public static const nombre:String = "Componentes";
			
			[Bindable]
			private var componentes_ac:Array = new Array();
			
			private function ErrorFaultHandler(event:FaultEvent, metodo:String):void
            {
            	trace("Error en clase "+nombre+".mxml en metodo " + metodo + "\nDetalle: "+event.fault.faultString);
            }
            public function clean():void
            {
            	currentState = "";
            	if(addComponente!=null) addComponente.clean();
            	init();
            }
			private function init():void
			{
				ElementoService.allElementos(index.usuario,"CMP");
			}
			private function allElementosResult(event:ResultEvent):void
			{
				componentes_ac = event.result.Tables.Elementos.Rows.source as Array;
			}
			private function statesResult(event:ComplexEvent):void
			{
				currentState = event.stateDestination;
				init();
			}
			private function filtar():void
			{
				if(filtro.selectedItem == 'Todas')
				{
					input.visible = false;
					input.text = "";
				}	
				else
				{
					input.visible = true;	
				}
				componentes_dg.dataProvider = componentes_ac.filter(filtrar);
			}
			private function filtrar(element:*, index:int, arr:Array):Boolean 
			{
				var res:Boolean=true;
				try
				{
	            	if(filtro.selectedItem == 'Nombre')
					{
					   	res = (element.nombre.toLocaleLowerCase().search(input.text.toLocaleLowerCase())>=0)&& res;
					}
					if(filtro.selectedItem == 'C贸digo')
					{
						res = (element.codigo.toLocaleLowerCase().search(input.text.toLocaleLowerCase())>=0)&& res;
					}
	    		}
	    		catch(error:Error)
	    		{
	    			trace("error");
	    		}
            	return res;
        	}
			private function delElementoResult(event:ResultEvent):void
			{
				var result:int = event.result as int;
				if(result == 1)			init();
				else if(result == 0)	Alert.show("El componente yo no existe en el sistema, intente recargar");
				else					Alert.show("No es posible reponder a su peticion por el momento\nIntentelo de nuevo 贸 mas tarde");
			}
			private function ver():void
			{
				if(componentes_dg.selectedIndex!=-1)
					ElementoService.getElemento(componentes_dg.selectedItem);
			}
			private function getElementoResult(event:ResultEvent):void
			{
				var component:Object = event.result as Object;
				var datosComponente:FORMATO = new FORMATO();
				datosComponente.vistaComponente(component); 
			}
			private function mantenciones():void
			{
				if(componentes_dg.selectedIndex!=-1)
				{
					currentState='AgregarMantencionesState';
					if(addMantenciones_cmp!=null) addMantenciones_cmp.parametros(componentes_dg.selectedItem as Object);
				}
			}
		]]>
	</mx:Script>
	
	<mx:Canvas x="10" y="10" width="496" height="39" cornerRadius="6" borderStyle="solid" id="canvas1">
		<mx:TextInput 	x="175" 	y="10" id="input" 	width="250" visible="false" change="filtar()"/>
		<mx:ComboBox 	x="10" 		y="10" id="filtro" change="filtar()">
			<mx:Array>
				<mx:String>Todas</mx:String>
				<mx:String>C贸digo</mx:String>
				<mx:String>Nombre</mx:String>
			</mx:Array>
		</mx:ComboBox>
	</mx:Canvas>
	<mx:Image x="10" y="57" width="56" height="55" source="iconos/add.png" id="add" click="{currentState='AgregarState'}"/>
	<mx:Image x="74" y="57" width="56" height="55" source="iconos/del.png" id="del" click="if(componentes_dg.selectedIndex!=-1) ElementoService.delElemento(componentes_dg.selectedItem.codigo)"/>
	<mx:Image x="138" y="57" width="56" height="55" source="iconos/mantencion.png" id="mantancion" click="mantenciones()"/>
	<mx:Image x="202" y="57" width="56" height="55" source="iconos/pdf.png" id="mostrar" click="ver()"/>
	<mx:DataGrid id="componentes_dg" width="755" x="10" y="120" dataProvider="{componentes_ac}" height="330">
		<mx:columns>
			<mx:DataGridColumn headerText="C贸digo"  	dataField="codigo" 		width="160"/>
			<mx:DataGridColumn headerText="Nombre" 		dataField="nombre" 		width="400"/>
			<mx:DataGridColumn headerText="Descripcion" dataField="descripcion" width="300"/>
		</mx:columns>
	</mx:DataGrid>
</mx:Panel>