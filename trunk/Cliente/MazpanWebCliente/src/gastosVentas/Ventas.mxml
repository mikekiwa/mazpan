<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="775" height="460" title="Ventas"
	xmlns:mc="misClases.*" backgroundColor="#cccccc" creationComplete="init()">
	
	<mx:WebService id="VentasService" wsdl="{index.URL + 'VentasService.asmx?WSDL'}" showBusyCursor="true">
		<mx:operation name="getVentas" 		result="getVentasResult(event)" fault="ErrorFaultHandler(event, 'getVentas')"/>
		<mx:operation name="getVentasPesos" result="getVentasResult(event)" fault="ErrorFaultHandler(event, 'getVentasPesos')"/>
	</mx:WebService>
	
	<mx:Script>
		<![CDATA[
			import misClases.Venta;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			public static const nombre:String = "Ventas";
			
			[Bindable]
			private var ventas_ac:Array;
			
			private var totalTotal:int = 0;
			private var totalTotalAnterior:int = 0;
			private var totalTotalPresupuesto:int = 0;
			private var totalTotalDesviacion:int = 100;
			private var respuestas:int = 0;
			
			private function ErrorFaultHandler(event:FaultEvent, metodo:String):void
            {
            	trace("Error en clase "+nombre+".mxml en metodo " + metodo + "\nDetalle: "+event.fault.faultString);
            }
            public function init():void
            {
            	
            }
            private function cambiarClientes():void
            {
            	clientesCB_cmp.cargar(sucursalesCB_cmp.selectedItem.ShortName);
            }
            private function cargar():void
            {
            	ventas_ac = new Array();
            	totalTotal = 0;
            	totalTotalAnterior = 0;
				totalTotalPresupuesto = 0;
				totalTotalDesviacion = 100;
				if(clientesCB_cmp.selectedItem.CardName=="Todos")
				{
					respuestas = clientesCB_cmp.datos.length-1;
					for(var i:int=1; i<clientesCB_cmp.datos.length; i++)
					{
						if(en_cb.text == "Unidades Vendidas") VentasService.getVentas(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.DatosAt(i).CardCode,clientesCB_cmp.DatosAt(i).CardName);
						else if(en_cb.text == "Ingreso Percibidos") VentasService.getVentasPesos(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.DatosAt(i).CardCode,clientesCB_cmp.DatosAt(i).CardName);
					}
				}
				else
				{
					respuestas = 1;
					if(en_cb.text == "Unidades Vendidas") VentasService.getVentas(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.selectedItem.CardCode,clientesCB_cmp.selectedItem.CardName);
					else if(en_cb.text == "Ingreso Percibidos") VentasService.getVentasPesos(mesCB_cmp.selectedIndex+1,ano_ns.value,clientesCB_cmp.selectedItem.CardCode,clientesCB_cmp.selectedItem.CardName);
				}
            }
            private function removeFormatting(e:String):String
			{
				var array:Array;
				array = e.split(".");
				return array.join("");
			}
            private function getVentasResult(event:ResultEvent):void
            {
            	respuestas--;
            	var i:int;
            	var j:int;
            	var mes:int = event.result.mes;
            	var t1:Array = event.result.t1.Tables.Ventas1.Rows.source as Array;
            	var t2:Array = event.result.t2.Tables.Ventas2.Rows.source as Array;
            	var t3:Array = event.result.t3.Tables.Ventas3.Rows.source as Array;
            	var t4:Array = event.result.t4.Tables.Ventas4.Rows.source as Array;
            	var t5:Array = event.result.t5.Tables.Presupuesto.Rows.source as Array;
            	
            	var total:int = 0;
            	var totalAnterior:int = 0;
            	var totalPresupuesto:int = 0;
            	var totalDesv:int = 100;
            	
            	if(t1.length>0 || t3.length>0 || t5.length>0) ventas_ac.push(new Venta(event.result.CardName,0,'','','',''));
            	
            	for(i=0; i<t3.length; i++)//con esto estoy sumando o restando las notas de credito, a las ventas del aÃ±o pasado para el mismo mes
            	{
            		for(j=0; j<t4.length; j++)
            		{
            			if(t3[i].itemname == t4[j].itemname) t3[i].quantity += int(t4[j].quantity);//en realida sumo porque se supone que t2 tiene puros negativos
            		}
            	}
            	for(i=0; i<t1.length; i++)
            	{
            		t1[i].tipo = 1;
            		t1[i].anterior = 0;
            		t1[i].presupuesto = 0;
            		t1[i].desviacion = 100;
            		
            		for(j=0; j<t2.length; j++)
            		{
            			if(t1[i].itemname == t2[j].itemname) t1[i].quantity += int(t2[j].quantity);//en realida sumo porque se supone que t2 tiene puros negativos
            		}
            		for(var k:int=0; k<t3.length; k++)
            		{
            			if(t1[i].itemname == t3[k].itemname) t1[i].anterior += int(t3[k].quantity);
            		}
            		
            		total += int(t1[i].quantity);
            		if(t1[i].quantity>0 || t1[i].anterior>0) ventas_ac.push(t1[i]);
            	}            	
            	var aux:Boolean;
            	for(i=0; i<t3.length; i++)
            	{
            		aux=true;
            		totalAnterior += int(t3[i].quantity);
            		for(j=0; j<ventas_ac.length && aux; j++)
            		{
            			if(t3[i].itemname == ventas_ac[j].itemname) aux = false;
            		}
            		if(aux) ventas_ac.push(new Venta(t3[i].itemname,1,'0',t3[i].quantity.toString(),'0','100'));
            	}
            	for(i=0; i<t5.length; i++)
            	{
            		aux=true;
            		for(j=0; j<ventas_ac.length && aux; j++)
            		{
            			if(t5[i].itemname == ventas_ac[j].itemname) aux = false;
            		}
            		if(aux)
            		{
            			var pp:int = 0;
            			var dd:int = 100;
            			if(mes==1) pp = int(t5[i].enero);
	    				if(mes==2) pp = int(t5[i].febrero);
	    				if(mes==3) pp = int(t5[i].marzo);
	    				if(mes==4) pp = int(t5[i].abril);
	    				if(mes==5) pp = int(t5[i].mayo);
	    				if(mes==6) pp = int(t5[i].junio);
	    				if(mes==7) pp = int(t5[i].julio);
	    				if(mes==8) pp = int(t5[i].agosto);
	    				if(mes==9) pp = int(t5[i].septiembre);
	    				if(mes==10) pp = int(t5[i].octubre);
	    				if(mes==11) pp = int(t5[i].noviembre);
	    				if(mes==12) pp = int(t5[i].diciembre);
	    				if(pp==0) dd=100;
	    				ventas_ac.push(new Venta(t5[i].itemname,1,'0','0',pp.toString(),dd.toString()));
            		} 
            	}
            	for(i=0; i<t5.length; i++)
            	{
            		aux=true;
            		if(mes==1) totalPresupuesto += int(t5[i].enero);
    				if(mes==2) totalPresupuesto += int(t5[i].febrero);
    				if(mes==3) totalPresupuesto += int(t5[i].marzo);
    				if(mes==4) totalPresupuesto += int(t5[i].abril);
    				if(mes==5) totalPresupuesto += int(t5[i].mayo);
    				if(mes==6) totalPresupuesto += int(t5[i].junio);
    				if(mes==7) totalPresupuesto += int(t5[i].julio);
    				if(mes==8) totalPresupuesto += int(t5[i].agosto);
    				if(mes==9) totalPresupuesto += int(t5[i].septiembre);
    				if(mes==10) totalPresupuesto += int(t5[i].octubre);
    				if(mes==11) totalPresupuesto += int(t5[i].noviembre);
    				if(mes==12) totalPresupuesto += int(t5[i].diciembre);
            				
            		for(j=0; j<ventas_ac.length && aux; j++)
            		{
            			if(t5[i].itemname == ventas_ac[j].itemname)
            			{
            				if(mes==1) ventas_ac[j].presupuesto = t5[i].enero;
            				if(mes==2) ventas_ac[j].presupuesto = t5[i].febrero;
            				if(mes==3) ventas_ac[j].presupuesto = t5[i].marzo;
            				if(mes==4) ventas_ac[j].presupuesto = t5[i].abril;
            				if(mes==5) ventas_ac[j].presupuesto = t5[i].mayo;
            				if(mes==6) ventas_ac[j].presupuesto = t5[i].junio;
            				if(mes==7) ventas_ac[j].presupuesto = t5[i].julio;
            				if(mes==8) ventas_ac[j].presupuesto = t5[i].agosto;
            				if(mes==9) ventas_ac[j].presupuesto = t5[i].septiembre;
            				if(mes==10) ventas_ac[j].presupuesto = t5[i].octubre;
            				if(mes==11) ventas_ac[j].presupuesto = t5[i].noviembre;
            				if(mes==12) ventas_ac[j].presupuesto = t5[i].diciembre;
            				aux = false;
            				if(ventas_ac[j].presupuesto!=0)
            				{ 
            					var desv:int = ((ventas_ac[j].quantity*100-ventas_ac[j].presupuesto*100)/ventas_ac[j].presupuesto);
            					ventas_ac[j].desviacion = desv;
            				}
            			}
            		}
            	}
            	if(t1.length>0 || t3.length>0 || t5.length>0)
            	{
            		if(totalPresupuesto!=0) totalDesv = ((total*100-totalPresupuesto*100)/totalPresupuesto);
            		ventas_ac.push(new Venta("SUBTOTAL",2,total.toString(),totalAnterior.toString(),totalPresupuesto.toString(),totalDesv.toString()));
            		ventas_ac.push(new Object());
            		totalTotal += total;
            		totalTotalAnterior += totalAnterior; 
            		totalTotalPresupuesto += totalPresupuesto;
            		if(respuestas==0)
            		{
            			if(totalTotalPresupuesto!=0) totalTotalDesviacion = (totalTotal*100-totalTotalPresupuesto*100)/totalTotalPresupuesto;
            			ventas_ac.push(new Venta("TOTAL",3,totalTotal.toString(),totalTotalAnterior.toString(),totalTotalPresupuesto.toString(),totalTotalDesviacion.toString()));
            		}
            	}
            	tabla.dataProvider = ventas_ac;
            }
            private function exportarPDF():void
            {
            	var pdf:LayoutVentas = new LayoutVentas();
            	pdf.generar(ventas_ac,mesCB_cmp.text,ano_ns.value,en_cb.text);
            }
		]]>
	</mx:Script>
	
	<mc:TablaVentas x="0" y="70" width="755" height="315" id="tabla" dataProvider="{ventas_ac}">
		<mc:columns>
			<mx:DataGridColumn headerText="Descripcion Articulo" dataField="itemname" width="250" sortable="false"/>
			<mx:DataGridColumn headerText="Mes AÃ±o Anterior" dataField="anterior" textAlign="right" sortable="false"/>
			<mx:DataGridColumn headerText="Mes" dataField="quantity" textAlign="right" sortable="false"/>
			<mx:DataGridColumn headerText="Presupuesto Mes" dataField="presupuesto" textAlign="right" sortable="false"/>
			<mx:DataGridColumn headerText="DesviaciÃ³n %" dataField="desviacion" textAlign="right" sortable="false"/>
		</mc:columns>
	</mc:TablaVentas>
	<mx:HBox x="0" y="10" width="100%">
		<mx:Label text="Zona:"/>
		<mc:SucursalesCB id="sucursalesCB_cmp" change="cambiarClientes()"/>
		<mx:Label text="Socio:"/>
		<mc:ClientesCB id="clientesCB_cmp"/>
	</mx:HBox>
	<mx:HBox x="0" y="40" width="100%">
		<mx:Label text="Mes: "/>
		<mc:MesesCB id="mesCB_cmp"/>
		<mx:Label text="AÃ±o:"/>
		<mx:NumericStepper id="ano_ns" minimum="1996" maximum="9999" value="2009"/>
		<mx:Label text="En:"/>
		<mx:ComboBox id="en_cb">
			<mx:String>Unidades Vendidas</mx:String>
			<mx:String>Ingreso Percibidos</mx:String>
		</mx:ComboBox>
		<mx:Button label="Cargar" click="cargar()"/>
	</mx:HBox>
	<mx:Button x="669" y="393" label="Exportar" click="exportarPDF()"/>
</mx:Panel>
